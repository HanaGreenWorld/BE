name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    # 기본 체크아웃
    - name: Checkout
      uses: actions/checkout@v4
    # Gradlew 실행 허용
    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew
    # JDK 17 세팅
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    # Gradle 설정
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
    # Gradle 빌드
    - name: Build with Gradle
      env:
        DATASOURCE_URL: ${{ secrets.DATASOURCE_URL }}
        DATASOURCE_USERNAME: ${{ secrets.DATASOURCE_USERNAME }}
        DATASOURCE_PASSWORD: ${{ secrets.DATASOURCE_PASSWORD }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        KAKAO_MAP_API_KEY: ${{ secrets.KAKAO_MAP_API_KEY }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
      run: ./gradlew build
    # 배포 패키지 준비
    - name: Prepare deployment package
      run: |
        mkdir -p deploy
        cp build/libs/${{ secrets.JAR_NAME }}.jar deploy/
    # SSH 키 준비
    - name: Add SSH key
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
    # GCP VM에 배포
    - name: Deploy to GCP VM
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.GCP_SSH_USER }}@${{ secrets.GCP_VM_IP }} 'sudo service shiba stop' 
        scp -o StrictHostKeyChecking=no deploy/${{ secrets.JAR_NAME }}.jar ${{ secrets.GCP_SSH_USER }}@${{ secrets.GCP_VM_IP }}:/home/${{ secrets.GCP_SSH_USER }}/app/ 
        ssh -o StrictHostKeyChecking=no ${{ secrets.GCP_SSH_USER }}@${{ secrets.GCP_VM_IP }} 'sudo service shiba start'
